<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_CapultFront</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar  lanzandoGato;
globalvar posX;
globalvar posY;
globalvar posicionOriginalFrontX;
globalvar posicionOriginalFrontY;
globalvar posicionOriginalBackX;
globalvar posicionOriginalBackY;

lanzandoGato=0;
posicionOriginalFrontX=obj_capultFront.x;
posicionOriginalFrontY=obj_capultFront.y;
posicionOriginalBackX=obj_catpultback.x;
posicionOriginalBackY=obj_catpultback.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(lanzandoGato==1){
obj_capultFront.visible=false;
obj_catpultback.visible=false;
 lanzado=2;
 
 //Crear el obj_cat en la posicion actual y se destruye
 with(obj_cat_Idle){
 var posicionX=obj_cat_Idle.x;
 var posicionY=obj_cat_Idle.y;
 with(obj_cat_Idle){
     instance_destroy();
   }
   var gatoDisparo=instance_create(posicionX,posicionY,obj_cat);
 }
 
  with(obj_cat_Idle_black){
 var posicionX=obj_cat_Idle_black.x;
 var posicionY=obj_cat_Idle_black.y;
 with(obj_cat_Idle_black){
     instance_destroy();
   }
    var gatoDisparo=instance_create(posicionX,posicionY,obj_cat_black);
 }
   
//le aplicamos impulso

with(gatoDisparo){
   //centro de masas(phy_com_x,phy_com_y)
  physics_apply_impulse(phy_com_x,phy_com_y,posicionGatoX-posicionX,posicionGatoY-posicionY);
}


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//invoca por evento

if (lanzandoGato==0)
{
   lanzandoGato=1;
   posX=mouse_x;
   posY=mouse_y;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//se invoca por sondeo
if(lanzandoGato==1){
 var posicionX=posX-mouse_x;
 var posicionY=posY-mouse_y;
 var distancia=sqrt(posicionX*posicionX+posicionY*posicionY);

        if(distancia&gt;100){
          posicionX=posicionX*100/distancia;
          posicionY=posicionY*100/distancia;
          show_debug_message("Distancia"
          +string(sqrt(posicionX*posicionX+posicionY*posicionY)));
        }
 obj_capultFront.x=posicionOriginalFrontX-posicionX;
 obj_capultFront.y=posicionOriginalFrontY-posicionY;
 obj_catpultback.x=posicionOriginalBackX-posicionX;
  obj_catpultback.y=posicionOriginalBackY-posicionY;
  
  with(obj_cat_Idle){
   obj_cat_Idle.x=posicionGatoX-posicionX;
   obj_cat_Idle.y=posicionGatoY-posicionY;
   }
   with(obj_cat_Idle_black){
   obj_cat_Idle_black.x=posicionGatoX-posicionX;
   obj_cat_Idle_black.y=posicionGatoY-posicionY;
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
