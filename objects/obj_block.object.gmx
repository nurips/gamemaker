<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_block</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//estado inicial
image_speed=0;
//cuando recibe un impacto pasa un tiempo
//hasta que otro impacto tiene efecto
activo=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activo=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockGlass">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//colision
var distancia=0;

with(other){
   distancia=sqrt(power(phy_position_xprevious-phy_position_x,2)*
             power(phy_position_yprevious-phy_position_y,2));
}
if(distancia&gt;RESISTENCIA &amp;&amp; activo==1){
   if(image_index&lt;2){
      image_index++;
   }else{
       instance_destroy();
       activo=0;//salta a los 30 steps
       alarm[0]=INTERVALO_IMPACTO;
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//colision
var distancia=0;

with(other){
   distancia=sqrt(power(phy_position_xprevious-phy_position_x,2)*
             power(phy_position_yprevious-phy_position_y,2));
}
if(distancia&gt;RESISTENCIA &amp;&amp; activo==1){
   if(image_index&lt;2){
      image_index++;
   }else{
       instance_destroy();
       activo=0;//salta a los 30 steps
       alarm[0]=INTERVALO_IMPACTO;
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_cat_black">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//colision
var distancia,distancia1,distancia2;

distancia1=sqrt(power(phy_position_xprevious-phy_position_x,2)*
            power(phy_position_yprevious-phy_position_y,2));
            
with(other){

distancia2=sqrt(power(phy_position_xprevious-phy_position_x,2)*
            power(phy_position_yprevious-phy_position_y,2));
}

if(distancia1&gt;distancia2){
    distancia=distancia1;
}else{
    distancia=distancia2;
}

if(distancia&gt;RESISTENCIA &amp;&amp; activo==1){
   if(image_index&lt;2){
       image_index++;
   }else{
        instance_destroy();
        
        activo=0;
        alarm[0]=INTERVALO_IMPACTO;//a los 30 steps salta la alarma
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_woodImpact</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_floor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//colision
var distancia;

distancia=sqrt(power(phy_position_xprevious-phy_position_x,2)*
            power(phy_position_yprevious-phy_position_y,2));

if(distancia&gt;RESISTENCIA &amp;&amp; activo==1){
   if(image_index&lt;2){
      image_index++;
   }else{
       instance_destroy();
       activo=0;//salta a los 30 steps
       alarm[0]=INTERVALO_IMPACTO;
   }


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_cat">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//colision
var distancia,distancia1,distancia2;

distancia1=sqrt(power(phy_position_xprevious-phy_position_x,2)*
            power(phy_position_yprevious-phy_position_y,2));
            
with(other){

distancia2=sqrt(power(phy_position_xprevious-phy_position_x,2)*
            power(phy_position_yprevious-phy_position_y,2));
}

if(distancia1&gt;distancia2){
    distancia=distancia1;
}else{
    distancia=distancia2;
}

if(distancia&gt;RESISTENCIA &amp;&amp; activo==1){
   if(image_index&lt;2){
       image_index++;
   }else{
        instance_destroy();
        
        activo=0;
        alarm[0]=INTERVALO_IMPACTO;//a los 30 steps salta la alarma
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_woodImpact</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
